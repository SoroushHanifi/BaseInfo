// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DarooDbContext))]
    [Migration("20250914024932___InitialServiceFeature__")]
    partial class __InitialServiceFeature__
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Daroo.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("Name");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.MainTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ScopeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DisplayOrder");

                    b.HasIndex("IsDelete");

                    b.HasIndex("Name");

                    b.HasIndex("ScopeId");

                    b.HasIndex("IsDelete", "Amount");

                    b.HasIndex("ScopeId", "IsDelete", "DisplayOrder");

                    b.ToTable("MainTitles");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.MainTitleServiceFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MainTitleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ServiceFeatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DisplayOrder");

                    b.HasIndex("IsActive");

                    b.HasIndex("IsDelete");

                    b.HasIndex("MainTitleId");

                    b.HasIndex("ServiceFeatureId");

                    b.HasIndex("MainTitleId", "ServiceFeatureId")
                        .IsUnique()
                        .HasFilter("[IsDelete] = 0");

                    b.HasIndex("MainTitleId", "IsDelete", "IsActive");

                    b.HasIndex("MainTitleId", "ServiceFeatureId", "IsDelete");

                    b.HasIndex("ServiceFeatureId", "IsDelete", "IsActive");

                    b.ToTable("MainTitleServiceFeatures");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.Scope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("IsDelete");

                    b.HasIndex("Name");

                    b.HasIndex("DepartmentId", "IsDelete");

                    b.ToTable("Scopes");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.ServiceFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DisplayOrder");

                    b.HasIndex("IsActive");

                    b.HasIndex("IsDelete");

                    b.HasIndex("Name");

                    b.HasIndex("IsDelete", "IsActive", "DisplayOrder");

                    b.ToTable("ServiceFeatures");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.MainTitle", b =>
                {
                    b.HasOne("Domain.Entities.Daroo.Scope", "Scope")
                        .WithMany("MainTitles")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.MainTitleServiceFeature", b =>
                {
                    b.HasOne("Domain.Entities.Daroo.MainTitle", "MainTitle")
                        .WithMany("MainTitleServiceFeatures")
                        .HasForeignKey("MainTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Daroo.ServiceFeature", "ServiceFeature")
                        .WithMany("MainTitleServiceFeatures")
                        .HasForeignKey("ServiceFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainTitle");

                    b.Navigation("ServiceFeature");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.Scope", b =>
                {
                    b.HasOne("Domain.Entities.Daroo.Department", "Department")
                        .WithMany("Scopes")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.Department", b =>
                {
                    b.Navigation("Scopes");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.MainTitle", b =>
                {
                    b.Navigation("MainTitleServiceFeatures");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.Scope", b =>
                {
                    b.Navigation("MainTitles");
                });

            modelBuilder.Entity("Domain.Entities.Daroo.ServiceFeature", b =>
                {
                    b.Navigation("MainTitleServiceFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
